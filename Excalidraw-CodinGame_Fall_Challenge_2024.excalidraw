{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 428,
      "versionNonce": 229011116,
      "index": "a5",
      "isDeleted": false,
      "id": "MoPMECqsLXb4HFQBaBbtY",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1485.3504242916783,
      "y": 481.5348945735043,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 459.45965576171875,
      "height": 275,
      "seed": 112639634,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166209343,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "20 lunar months\n20 days / lunar month\n\nstart of each month:\n    receive resources\n    list of new buildings constructed\n\nend of each month:\n    all astronaut disappear\n    all pods return to their starting point\n    unused resources yield 10% interest",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "20 lunar months\n20 days / lunar month\n\nstart of each month:\n    receive resources\n    list of new buildings constructed\n\nend of each month:\n    all astronaut disappear\n    all pods return to their starting point\n    unused resources yield 10% interest",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 468,
      "versionNonce": 772090796,
      "index": "aB",
      "isDeleted": false,
      "id": "ZcO2K4OYoMVHkN_UlBi7E",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1495.0647100059641,
      "y": 794.9634660020756,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 517.599609375,
      "height": 225,
      "seed": 1324026766,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166301195,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Transportation: Tube\n    between 2 building\n    bidirectional\n    can't cross another tube\n    can't cross a building without stopping at it\n    1 day to travel whatever the length\n    10 passengers max\n    can be upgraded to handle multiple pods\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Transportation: Tube\n    between 2 building\n    bidirectional\n    can't cross another tube\n    can't cross a building without stopping at it\n    1 day to travel whatever the length\n    10 passengers max\n    can be upgraded to handle multiple pods\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 533,
      "versionNonce": 239807788,
      "index": "aC",
      "isDeleted": false,
      "id": "4-ORAhZsKgk_N6BeJe-0n",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -944.5647100059641,
      "y": 481.8920374306472,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 458.0596923828125,
      "height": 100,
      "seed": 1612916946,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166233227,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Building:\n    Organized on a 160x90km area\n    Lunar Modules and Landing Pads\n    Can be connected to 5 tubes maximum",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Building:\n    Organized on a 160x90km area\n    Lunar Modules and Landing Pads\n    Can be connected to 5 tubes maximum",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 410,
      "versionNonce": 2057366060,
      "index": "aD",
      "isDeleted": false,
      "id": "72X-ildk3sr5IfVbf3lmZ",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1486.2313766726309,
      "y": 1047.058704097314,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 513.3997192382812,
      "height": 125,
      "seed": 688958350,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166302228,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Transportation: Teleporter\n    More expensive than Tube\n    No limit of passengers\n    Can cross anything\n    Either an entrance or an exit but not both",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Transportation: Teleporter\n    More expensive than Tube\n    No limit of passengers\n    Can cross anything\n    Either an entrance or an exit but not both",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 782,
      "versionNonce": 905245588,
      "index": "aG",
      "isDeleted": false,
      "id": "qpByyBzzse-ABTeoheUKM",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -954.7313766726309,
      "y": 713.2253707639807,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 798.2195434570312,
      "height": 125,
      "seed": 1085078418,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728168263612,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Building: Lunar Module\n    Multiple types corresponding with astronauts\n    Can be multiple module of the same type\n        If there is multiple module of the same type,\n        balancing same type astronauts between them score more points",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Building: Lunar Module\n    Multiple types corresponding with astronauts\n    Can be multiple module of the same type\n        If there is multiple module of the same type,\n        balancing same type astronauts between them score more points",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 405,
      "versionNonce": 1838310188,
      "index": "aH",
      "isDeleted": false,
      "id": "qK3EJAZ9ynTHKv9uCnvzV",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -949.5647100059641,
      "y": 605.3920374306472,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 536.5396118164062,
      "height": 75,
      "seed": 1769815566,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166315175,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Building: Landing pad\n    Start of each month gives astronauts\n    Astronaut types never change between months",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Building: Landing pad\n    Start of each month gives astronauts\n    Astronaut types never change between months",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 691,
      "versionNonce": 654586260,
      "index": "aI",
      "isDeleted": false,
      "id": "wJF0YILjBs9ZuMBbqFfMw",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -845.8980433392974,
      "y": 1345.5587040973141,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 812.9993286132812,
      "height": 100,
      "seed": 1063618510,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728168237845,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Earning points:\n    100 points per astronaut\n    -1 per day spent by the astronaut outside of a module of the same type\n    -1 until 0 per astronaut already in the same building during the month",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Earning points:\n    100 points per astronaut\n    -1 per day spent by the astronaut outside of a module of the same type\n    -1 until 0 per astronaut already in the same building during the month",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1289,
      "versionNonce": 58670813,
      "index": "aJ",
      "isDeleted": false,
      "id": "XFIJwS64SorvzJukOs0Ul",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 77.93528999403588,
      "y": 493.3920374306472,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 780.03955078125,
      "height": 675,
      "seed": 1876674322,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728201991371,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Input:\n    Resources: 1 int\n        Total amount\n\n    numTravelRoutes: 1 int\n        number of routes, tubes or teleporter already existing\n\n    Route stats: 3 int / route\n        buildingId1, buildingId2, capacity\n        both Id are both end of the route\n        if capacity = 0 -> Teleporter else Tube\n\n    numPods: 1 int\n        number of pods in tubes\n\n    Pod stats: 2+ int / pod\n        podId, stopsNumber, [stopsIds]\n        stopsIds number is defined by the second int given\n\n    numNewBuildings: 1 int\n        number of new buildings constructed\n\n    Building stats: 4+ int / building\n        type, buildingId, coordX, coordY\n        if type == 0 -> landing pad -> add other info\n            numAstronauts, [astronautTypes]\n            astronautTypes number is defined by the 5th int given",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Input:\n    Resources: 1 int\n        Total amount\n\n    numTravelRoutes: 1 int\n        number of routes, tubes or teleporter already existing\n\n    Route stats: 3 int / route\n        buildingId1, buildingId2, capacity\n        both Id are both end of the route\n        if capacity = 0 -> Teleporter else Tube\n\n    numPods: 1 int\n        number of pods in tubes\n\n    Pod stats: 2+ int / pod\n        podId, stopsNumber, [stopsIds]\n        stopsIds number is defined by the second int given\n\n    numNewBuildings: 1 int\n        number of new buildings constructed\n\n    Building stats: 4+ int / building\n        type, buildingId, coordX, coordY\n        if type == 0 -> landing pad -> add other info\n            numAstronauts, [astronautTypes]\n            astronautTypes number is defined by the 5th int given",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1040,
      "versionNonce": 1470479660,
      "index": "aK",
      "isDeleted": false,
      "id": "_EUf0_OrHdPK0QNVJn0Pf",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 799.2686233273691,
      "y": 484.3920374306472,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 743.4995727539062,
      "height": 650,
      "seed": 1531302164,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166349130,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Action:\n    TUBE buildingId1 buildingId2\n        cost 1 resource for each 0.1km rounded down\n\n    UPGRADE buildingId1 buildingId2\n        cost = initial price * number of pod to add\n\n    TELEPORT buildingId1 buildingId2\n        1 is Entrance, 2 is Exit\n        cost = 5 000\n\n    POD podId [buildingId list]\n        cost = 1 000\n        create a pod and define its path\n        id between 1 and 500\n        if begin == end, path will loop around, else will stop at end\n\n    DESTROY podId\n        remove a pod\n        gives 750 resources\n\n    WAIT\n        do not perform any action for the turn\n\nif action is not possible, will be ignored + warning message\nroutes can never be removed",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Action:\n    TUBE buildingId1 buildingId2\n        cost 1 resource for each 0.1km rounded down\n\n    UPGRADE buildingId1 buildingId2\n        cost = initial price * number of pod to add\n\n    TELEPORT buildingId1 buildingId2\n        1 is Entrance, 2 is Exit\n        cost = 5 000\n\n    POD podId [buildingId list]\n        cost = 1 000\n        create a pod and define its path\n        id between 1 and 500\n        if begin == end, path will loop around, else will stop at end\n\n    DESTROY podId\n        remove a pod\n        gives 750 resources\n\n    WAIT\n        do not perform any action for the turn\n\nif action is not possible, will be ignored + warning message\nroutes can never be removed",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1507,
      "versionNonce": 1521582612,
      "index": "aM",
      "isDeleted": false,
      "id": "OaiHr4jzCUfOi29KSPt4R",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -963.3742338154884,
      "y": 861.7015612401717,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1130.5792236328125,
      "height": 400,
      "seed": 1191524244,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166310040,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Movement:\n    Astronauts:\n        Their behavior is naive\n            move towards the nearest module\n            does not consider if the trajectory is optimal or doable\n        Teleporters\n            if on entrance -> if exit closest or equal from target than current position, will take TP\n            Can take a tube the same day as a teleporter\n            count as 0 in terms of distance to a module\n        lower landingPadId gives priority on others astronauts when choosing a seat in a pod\n\n    Pods:\n        If multiple pods try to access the same tube with insufficient capacity\n            lowest Id has priority, others does not move until next day\n        Atronaut takes pod with empty seat if next stop does not increase distance from target\n        lower Id pod has the priority if several pods are available",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Movement:\n    Astronauts:\n        Their behavior is naive\n            move towards the nearest module\n            does not consider if the trajectory is optimal or doable\n        Teleporters\n            if on entrance -> if exit closest or equal from target than current position, will take TP\n            Can take a tube the same day as a teleporter\n            count as 0 in terms of distance to a module\n        lower landingPadId gives priority on others astronauts when choosing a seat in a pod\n\n    Pods:\n        If multiple pods try to access the same tube with insufficient capacity\n            lowest Id has priority, others does not move until next day\n        Atronaut takes pod with empty seat if next stop does not increase distance from target\n        lower Id pod has the priority if several pods are available",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 457,
      "versionNonce": 1017939884,
      "index": "aO",
      "isDeleted": false,
      "id": "gCNXDDE8f4QAhHA_Sn9cy",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1497.9694719107265,
      "y": 1237.9396564782674,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 595.3596801757812,
      "height": 175,
      "seed": 1261168684,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728166548357,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Constraints:\n    150 buildings maximum\n    Landing pads will have between 1 and 100 astronaut\n    Maximum 1 000 astronauts overall\n    No building will be constructed on an existing tube\n    Timeout of 500ms, 1000ms for first turn\n    Astronaut will always have at least one target",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Constraints:\n    150 buildings maximum\n    Landing pads will have between 1 and 100 astronaut\n    Maximum 1 000 astronauts overall\n    No building will be constructed on an existing tube\n    Timeout of 500ms, 1000ms for first turn\n    Astronaut will always have at least one target",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1789,
      "versionNonce": 1082995580,
      "index": "aP",
      "isDeleted": false,
      "id": "1Ble4X51w_MFBTiYKKCCi",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 174.094957451112,
      "y": 1205.9439257538843,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1139.1591796875,
      "height": 300,
      "seed": 621298068,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306983763,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Notes:\n    Resources are not points. Spend them.\n    Looping multiple pods can be efficient, but they have to never stop EVER.\n    Changing the path of a pod by destroying it might resolve issues on a specific situation\n    All tubes should be used by at least one pod in a lunar month to avoid stranded astronauts\n    Warning message of an impossible action can give information for next turn\n    Tubes can't be destroyed, naive building is not a long term solution (5 connection max per building)\n    podId can be used to give priority to avoid deadlocks of tubes not crossed for multiple days\n    Pathfinding is the enemy. No dead end allowed.\n    Count in days for tubes, distance for teleporter. Pathfinding wants to lower both.\n    We can know how many tubes are attached to a building by keeping track of what we were able to create\n    It will help to avoid looping too much on the same building later on long term work and prevent timeouts",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Notes:\n    Resources are not points. Spend them.\n    Looping multiple pods can be efficient, but they have to never stop EVER.\n    Changing the path of a pod by destroying it might resolve issues on a specific situation\n    All tubes should be used by at least one pod in a lunar month to avoid stranded astronauts\n    Warning message of an impossible action can give information for next turn\n    Tubes can't be destroyed, naive building is not a long term solution (5 connection max per building)\n    podId can be used to give priority to avoid deadlocks of tubes not crossed for multiple days\n    Pathfinding is the enemy. No dead end allowed.\n    Count in days for tubes, distance for teleporter. Pathfinding wants to lower both.\n    We can know how many tubes are attached to a building by keeping track of what we were able to create\n    It will help to avoid looping too much on the same building later on long term work and prevent timeouts",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 444,
      "versionNonce": 1797893262,
      "index": "aQ",
      "isDeleted": false,
      "id": "qDiimiNiMlnNXXbIi9fat",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 185.20226530080026,
      "y": 1613.121092011533,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1021,
      "height": 250,
      "seed": 1877553836,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491981405,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 8,
      "text": "Verify if A is on segment BC by creating triangle ABC and checking if BC = AB + AC:\n\n    function distance(p1, p2) {\n        return sqrt((p2.x-p1.x)² + (p2.y - p1.y)²);\n    }\n    \n    function pointOnSegment(A, B, C) {\n        epsilon = 0.0000001;\n        return (-epsilon < distance(B, A) + distance(A, C) - distance(B, C) < epsilon);\n    }",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Verify if A is on segment BC by creating triangle ABC and checking if BC = AB + AC:\n\n    function distance(p1, p2) {\n        return sqrt((p2.x-p1.x)² + (p2.y - p1.y)²);\n    }\n    \n    function pointOnSegment(A, B, C) {\n        epsilon = 0.0000001;\n        return (-epsilon < distance(B, A) + distance(A, C) - distance(B, C) < epsilon);\n    }",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 782,
      "versionNonce": 692562126,
      "index": "aR",
      "isDeleted": false,
      "id": "52fX6P62-9zdfJzx8-fAy",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 157.4088818438604,
      "y": 1969.4375888085603,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#a5d8ff",
      "width": 1336,
      "height": 275,
      "seed": 668632876,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491983238,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 8,
      "text": "Verify if two segment AB and CD are crossing:\n\n    function orientation(p1, p2, p3) {\n        prod = (p3.y-p1.y) * (p2.x-p1.x) - (p2.y-p1.y) * (p3.x-p1.x);\n        return (sign(prod));\n    }\n    \n    function segmentsIntersect(A, B, C, D) {\n        return (orientation(A, B, C) * orientation(A, B, D) < 0 && orientation(C, D, A) * orientation(C, D, B) < 0);\n    }\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Verify if two segment AB and CD are crossing:\n\n    function orientation(p1, p2, p3) {\n        prod = (p3.y-p1.y) * (p2.x-p1.x) - (p2.y-p1.y) * (p3.x-p1.x);\n        return (sign(prod));\n    }\n    \n    function segmentsIntersect(A, B, C, D) {\n        return (orientation(A, B, C) * orientation(A, B, D) < 0 && orientation(C, D, A) * orientation(C, D, B) < 0);\n    }\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 941,
      "versionNonce": 1378527812,
      "index": "aS",
      "isDeleted": false,
      "id": "rTRYm3Ek6IJMG0fH0EXFQ",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1852.2198210551169,
      "y": 487.166966997192,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1097,
      "height": 350,
      "seed": 1731864700,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306027670,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 8,
      "text": "std::string createTube(buildingId1, buildingId2) {}\nstd::string upgradeTube(buildingId1, buildingId2) {}\nstd::string createTeleport(buildingId1, buildingId2) {}\n    Since all 3 of those functions have the same prototype\n    They became the following function\n    std::string sendTransportMessage(std::string action, int buildingId1, int buildingId2) {}\n\nstd::string createPod(podId, std::vector<int> buildingIdList) {}\nstd::string destroyPod(podId) {}\n\nstd::string createRoute ?\n    Will call createTube() and createPod() to make a route with a pod that goes back & forth on it\nstd::string createLoop ?\n    Would create multiple Tubes and a pod on each point given to create a loop",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "std::string createTube(buildingId1, buildingId2) {}\nstd::string upgradeTube(buildingId1, buildingId2) {}\nstd::string createTeleport(buildingId1, buildingId2) {}\n    Since all 3 of those functions have the same prototype\n    They became the following function\n    std::string sendTransportMessage(std::string action, int buildingId1, int buildingId2) {}\n\nstd::string createPod(podId, std::vector<int> buildingIdList) {}\nstd::string destroyPod(podId) {}\n\nstd::string createRoute ?\n    Will call createTube() and createPod() to make a route with a pod that goes back & forth on it\nstd::string createLoop ?\n    Would create multiple Tubes and a pod on each point given to create a loop",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "ellipse",
      "version": 120,
      "versionNonce": 795132356,
      "index": "aT",
      "isDeleted": false,
      "id": "hDY6CNK6oQVz2ngD8gB3m",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1789.9975988328933,
      "y": 526.0558558860807,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "width": 42.22222222222217,
      "height": 43.33333333333337,
      "seed": 303838020,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1728306027670,
      "link": null,
      "locked": false
    },
    {
      "type": "ellipse",
      "version": 215,
      "versionNonce": 477096260,
      "index": "aU",
      "isDeleted": false,
      "id": "vEbtA-Q97ughvMv59jjo4",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1788.8864877217825,
      "y": 665.5003003305249,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "width": 42.22222222222217,
      "height": 43.33333333333337,
      "seed": 679120508,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1728306027670,
      "link": null,
      "locked": false
    },
    {
      "type": "ellipse",
      "version": 182,
      "versionNonce": 480911556,
      "index": "aV",
      "isDeleted": false,
      "id": "iiYjLvM2diBEv7zK1fepI",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1792.2198210551157,
      "y": 734.3891892194139,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#b2f2bb",
      "width": 42.22222222222217,
      "height": 43.33333333333337,
      "seed": 133330756,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1728306027670,
      "link": null,
      "locked": false
    },
    {
      "type": "ellipse",
      "version": 187,
      "versionNonce": 397502532,
      "index": "aW",
      "isDeleted": false,
      "id": "wU26ShHmjiGkvEyw7OtNH",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1794.4420432773377,
      "y": 795.5003003305252,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffc9c9",
      "width": 42.22222222222217,
      "height": 43.33333333333337,
      "seed": 2048454596,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1728306027670,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 499,
      "versionNonce": 249136708,
      "index": "aZ",
      "isDeleted": false,
      "id": "wVWwKJU9IkSBvud1ubUEE",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1783.230371136643,
      "y": 1118.1725772930051,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 268.1798400878906,
      "height": 225,
      "seed": 1393616636,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306575687,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "building IDs = 0 1 2 3 4 5\nid list size = 6\n\n0 - 0 (invalid)\n0 - 1\n0 - 2\n0 - 3\n0 - 4\n0 - 5",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "building IDs = 0 1 2 3 4 5\nid list size = 6\n\n0 - 0 (invalid)\n0 - 1\n0 - 2\n0 - 3\n0 - 4\n0 - 5",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 399,
      "versionNonce": 182595908,
      "index": "aa",
      "isDeleted": false,
      "id": "NnFUEpa9tsRjBQ_H5WdeQ",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1933.7381160702655,
      "y": 1192.521400493584,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 123.89991760253906,
      "height": 150,
      "seed": 1789854020,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306448300,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "1 - 0 (done)\n1 - 1 (invalid)\n1 - 2\n1 - 3\n1 - 4\n1 - 5",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1 - 0 (done)\n1 - 1 (invalid)\n1 - 2\n1 - 3\n1 - 4\n1 - 5",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 387,
      "versionNonce": 702501060,
      "index": "ab",
      "isDeleted": false,
      "id": "RIV-6n3WPMNkVzaPSPpXS",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2071.229030116446,
      "y": 1190.1986172417803,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 141.53990173339844,
      "height": 150,
      "seed": 447425404,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306456469,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "2 - 0 (done)\n2 - 1 (done)\n2 - 2 (invalid)\n2 - 3\n2 - 4\n2 - 5",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "2 - 0 (done)\n2 - 1 (done)\n2 - 2 (invalid)\n2 - 3\n2 - 4\n2 - 5",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 560,
      "versionNonce": 1879229820,
      "index": "ac",
      "isDeleted": false,
      "id": "Fsxg2Eue45G8UO9tXFwKU",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2223.0588877917735,
      "y": 1188.9869451010877,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 140.29991149902344,
      "height": 150,
      "seed": 1102519108,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306470615,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "3 - 0 (done)\n3 - 1 (done)\n3 - 2 (done)\n3 - 3 (invalid)\n3 - 4\n3 - 5",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "3 - 0 (done)\n3 - 1 (done)\n3 - 2 (done)\n3 - 3 (invalid)\n3 - 4\n3 - 5",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 464,
      "versionNonce": 125190908,
      "index": "ad",
      "isDeleted": false,
      "id": "ve5YqZV0XikWLDdMoGdPW",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2385.3412701002176,
      "y": 1187.7249924456044,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 138.65989685058594,
      "height": 150,
      "seed": 1618304836,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306480095,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "4 - 0 (done)\n4 - 1 (done)\n4 - 2 (done)\n4 - 3 (done)\n4 - 4 (invalid)\n4 - 5",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "4 - 0 (done)\n4 - 1 (done)\n4 - 2 (done)\n4 - 3 (done)\n4 - 4 (invalid)\n4 - 5",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 398,
      "versionNonce": 1947543548,
      "index": "ae",
      "isDeleted": false,
      "id": "vcgQHBdyt_TlhuzDKwZfE",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2547.6236524086607,
      "y": 1190.9577647493566,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 136.77989196777344,
      "height": 150,
      "seed": 714804804,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306492679,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "5 - 0 (done)\n5 - 1 (done)\n5 - 2 (done)\n5 - 3 (done)\n5 - 4 (done)\n5 - 5 (invalid)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "5 - 0 (done)\n5 - 1 (done)\n5 - 2 (done)\n5 - 3 (done)\n5 - 4 (done)\n5 - 5 (invalid)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1110,
      "versionNonce": 1561826116,
      "index": "ag",
      "isDeleted": false,
      "id": "tF9A9EgwCfydg7a4QK6SY",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1764.9744871395367,
      "y": 1558.5038990960384,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 1234.638916015625,
      "height": 175,
      "seed": 441182588,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728309028460,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Amelioration paths:\n    Priority on the creation of pad-module tubes\n    Priority on the closest module from pad\n    Add check of obstacles for the creation of tube\n    Keep track of the resources needed for the creation of a tube and a pod together\n    Could use of the building type and astronaut type to create a priority on which building must be linked to which pad\n    ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Amelioration paths:\n    Priority on the creation of pad-module tubes\n    Priority on the closest module from pad\n    Add check of obstacles for the creation of tube\n    Keep track of the resources needed for the creation of a tube and a pod together\n    Could use of the building type and astronaut type to create a priority on which building must be linked to which pad\n    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 429,
      "versionNonce": 111950204,
      "index": "ah",
      "isDeleted": false,
      "id": "eXzIWOpARctyAyQec9ojv",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1784.8121471442523,
      "y": 1032.6755019755028,
      "strokeColor": "#1971c2",
      "backgroundColor": "#ffc9c9",
      "width": 815.9793090820312,
      "height": 50,
      "seed": 631652220,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306411259,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Naive implementation : Build a tube and a pod from every building to every building\nExample of what can be done",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Naive implementation : Build a tube and a pod from every building to every building\nExample of what can be done",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 122,
      "versionNonce": 1264504900,
      "index": "ai",
      "isDeleted": false,
      "id": "rYVixcNVfNiPiia7d-uGG",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1781.3279722665472,
      "y": 1379.9315981201473,
      "strokeColor": "#2f9e44",
      "backgroundColor": "#ffc9c9",
      "width": 403.6796875,
      "height": 25,
      "seed": 481322436,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306406666,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "output = 950k pts / 75% tests passed",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "output = 950k pts / 75% tests passed",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 815,
      "versionNonce": 368601212,
      "index": "ak",
      "isDeleted": false,
      "id": "vdE-HaaPphv7cerYlkxxN",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1773.198230885234,
      "y": 1432.1942212857289,
      "strokeColor": "#e03131",
      "backgroundColor": "#ffc9c9",
      "width": 1460.3389892578125,
      "height": 100,
      "seed": 469212612,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728306994521,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Problems revealed thanks to this test:\n    Naive approach of iterating on each building to build a tube and a pod timeout easily if too much buildings are present\n    Tube cutting the creation of another tube is happening WAY TOO OFTEN because buildings ID is not relative to their position on the map\n    Distance makes tubes cost way too much on first rounds, making possible softlocks or the expansion way slower than expected",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Problems revealed thanks to this test:\n    Naive approach of iterating on each building to build a tube and a pod timeout easily if too much buildings are present\n    Tube cutting the creation of another tube is happening WAY TOO OFTEN because buildings ID is not relative to their position on the map\n    Distance makes tubes cost way too much on first rounds, making possible softlocks or the expansion way slower than expected",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 1010,
      "versionNonce": 2024820430,
      "index": "am",
      "isDeleted": false,
      "id": "XjBasfYTFFQO4NnfXKwFJ",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1434.4706582978788,
      "y": 1774.5775016394905,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 781.3193969726562,
      "height": 125,
      "seed": 1628506884,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491970870,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Second implementation : Priority on Pad-Module tubes\nObjectives :\n    Building a route from each pad to at least one module\n    Don't do anything if resources are not enough to build a route\n    If the creation of a route is impossible due to terrain, change target",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Second implementation : Priority on Pad-Module tubes\nObjectives :\n    Building a route from each pad to at least one module\n    Don't do anything if resources are not enough to build a route\n    If the creation of a route is impossible due to terrain, change target",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 255,
      "versionNonce": 463029518,
      "index": "an",
      "isDeleted": false,
      "id": "glgtt4bmp1BjMNlk6TgGj",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1419.7814525138697,
      "y": 1987.0813453150042,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 746.859375,
      "height": 150,
      "seed": 739531524,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491970870,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Notes:\n    Priority on pad-module routes\n        Priority on closest to avoid too expensive route\n        If not possible, pad-pad routes, then module-module routes\n    Resource cost\n        distanceAB + 1000",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Notes:\n    Priority on pad-module routes\n        Priority on closest to avoid too expensive route\n        If not possible, pad-pad routes, then module-module routes\n    Resource cost\n        distanceAB + 1000",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 662,
      "versionNonce": 1518957390,
      "index": "ao",
      "isDeleted": false,
      "id": "zSXG2yGEFR1iwrsIBLt_O",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1457.392952930912,
      "y": 2191.4951121276517,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 941.039306640625,
      "height": 75,
      "seed": 1657656398,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491970870,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Landing Pads can be stored in another vector (duplicate possible as long as IDs are checked)\nRoutes can contain pointers or references to buildings to facilitate iterations\nBuildings can contain pointers or references to routes to facilitate iterations",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Landing Pads can be stored in another vector (duplicate possible as long as IDs are checked)\nRoutes can contain pointers or references to buildings to facilitate iterations\nBuildings can contain pointers or references to routes to facilitate iterations",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "type": "text",
      "version": 253,
      "versionNonce": 534370702,
      "index": "ap",
      "isDeleted": false,
      "id": "vXNFodCW-RcciKEQB9CBb",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1591.910748999815,
      "y": 2364.1439370034873,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "#ffc9c9",
      "width": 579.01953125,
      "height": 50,
      "seed": 663260686,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1728491970870,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Buildings vector need to stay and be updated\nPods and Routes vector need to be wiped and filled again",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Buildings vector need to stay and be updated\nPods and Routes vector need to be wiped and filled again",
      "autoResize": true,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}